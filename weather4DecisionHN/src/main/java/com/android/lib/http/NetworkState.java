package com.android.lib.http;import android.content.Context;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.net.NetworkInfo.State;/** *  * 类描述：网络状态判断     * <p> * 创建人：Lynn * <p> * 创建时间：2013-3-22 下午4:25:22   * <p>      * 修改备注：     * <p> * @version 1.0 * @since 1.0 */public class NetworkState {		/**	 * 当前网络状态是否可用	 * 	 * @return true 网络可用；false 网络不可用	 */	public static boolean isAvailable(Context context) {		ConnectivityManager cManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);		boolean flag = false;		if (cManager != null) {			NetworkInfo netInfo = cManager.getActiveNetworkInfo();			if (netInfo != null && netInfo.isConnected()) {				flag = true;			}		}		return flag;	}		/**	 * 获取网络类型	 * 	 * @param context Context	 * 	 * @return {@link NetworkType}	 */	public static NetworkType getNetworkType(Context context) {		NetworkType type = NetworkType.DISABLED;		if (!isAvailable(context)) {			return type;		}		type = NetworkType.UNKNOWN;		ConnectivityManager cManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);		State wifiState = State.UNKNOWN;		if (null != cManager.getNetworkInfo(1)) {			wifiState = cManager.getNetworkInfo(1).getState();		}		State mobileState = State.UNKNOWN;		if (null != cManager.getNetworkInfo(0)) {			mobileState = cManager.getNetworkInfo(0).getState();		}		if (wifiState == NetworkInfo.State.CONNECTED || wifiState == NetworkInfo.State.CONNECTING) {			// wifi			type = NetworkType.WIFI;		} else if (mobileState == NetworkInfo.State.CONNECTED || mobileState == NetworkInfo.State.CONNECTING) {			// mobile			type = NetworkType.MOBILE;		}		return type;	}		/**	 * 	 * 类描述：网络状态	 * <p>	 * 创建人：Lynn	 * <p>	 * 创建时间：2013-3-22 下午4:31:02  	 * <p>     	 * 修改备注：    	 * <p>	 * @version 1.0	 * @since 1.0	 */	public enum NetworkType {		WIFI, MOBILE, UNKNOWN, DISABLED	}}